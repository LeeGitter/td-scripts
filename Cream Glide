local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local rootPart = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

-- Parameters
local fallSpeed = 1 -- studs/sec
local maxHoldTime = 1.5 -- seconds of total space-hold
local isSlowFalling = false
local spaceHeldTime = 0
local spaceHeld = false

-- Animation setup
local slowFallAnim = Instance.new("Animation")
slowFallAnim.AnimationId = "rbxassetid://89678900428949"
local slowFallTrack = humanoid:LoadAnimation(slowFallAnim)

-- VectorForce setup
local attachment = Instance.new("Attachment", rootPart)
local vectorForce = Instance.new("VectorForce")
vectorForce.Attachment0 = attachment
vectorForce.RelativeTo = Enum.ActuatorRelativeTo.World
vectorForce.Force = Vector3.zero
vectorForce.Enabled = false
vectorForce.Parent = rootPart

-- Spacebar tracking
UIS.InputBegan:Connect(function(input, gameProcessed)
    if input.KeyCode == Enum.KeyCode.Space then
        spaceHeld = true
    end
end)

UIS.InputEnded:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.Space then
        spaceHeld = false
    end
end)

-- Activate slow fall
UIS.InputBegan:Connect(function(input, gameProcessed)
    if input.KeyCode == Enum.KeyCode.F and humanoid:GetState() == Enum.HumanoidStateType.Freefall then
        if not isSlowFalling then
            isSlowFalling = true
            spaceHeldTime = 0

            -- Cancel vertical velocity
            rootPart.AssemblyLinearVelocity = Vector3.new(
                rootPart.AssemblyLinearVelocity.X,
                0,
                rootPart.AssemblyLinearVelocity.Z
            )

            -- Play animation
            if not slowFallTrack.IsPlaying then
                slowFallTrack:Play()
            end

            vectorForce.Enabled = true

            local connection
            connection = RunService.RenderStepped:Connect(function(dt)
                if not isSlowFalling then
                    connection:Disconnect()
                    return
                end

                local mass = rootPart.AssemblyMass
                local gravity = workspace.Gravity

                if spaceHeld and spaceHeldTime < maxHoldTime then
                    spaceHeldTime += dt
                    vectorForce.Force = Vector3.new(0, gravity * mass, 0) -- hover
                else
                    vectorForce.Force = Vector3.new(0, (gravity - fallSpeed) * mass, 0) -- slow descent
                end

                if humanoid:GetState() ~= Enum.HumanoidStateType.Freefall then
                    isSlowFalling = false
                    vectorForce.Enabled = false
                    vectorForce.Force = Vector3.zero
                    if slowFallTrack.IsPlaying then
                        slowFallTrack:Stop()
                    end
                    connection:Disconnect()
                end
            end)
        end
    end
end)
