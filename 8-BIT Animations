local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer

-- Configurable choppy frame hold time (seconds)
local FRAME_HOLD_TIME = 0.25 -- increase to slow animation down

local choppyState = {}
local connections = {}

local function cleanup()
	for _, conn in pairs(connections) do
		if conn then conn:Disconnect() end
	end
	connections = {}
	choppyState = {}
end

local function getKeyframes(animation)
	local keyframes = animation:GetKeyframeSequence().Keyframes
	local times = {}
	for _, keyframe in ipairs(keyframes) do
		table.insert(times, keyframe.Time)
	end
	table.sort(times)
	return times
end

local function setupTrack(track)
	if choppyState[track] then return end
	local anim = track.Animation
	if not anim then return end
	local length = track.Length
	if length <= 0 then return end

	local keyframes = getKeyframes(anim)
	if #keyframes < 3 then return end

	local snapTimes = {
		keyframes[1],
		keyframes[math.floor(#keyframes / 2)],
		keyframes[#keyframes],
	}

	choppyState[track] = {
		snapTimes = snapTimes,
		currentIndex = 1,
		timer = 0,
		length = length,
	}

	-- Play with no easing, normal speed (let Roblox handle the blend)
	track:Play(0, 1, 0)
end

local function startChoppySystem()
	cleanup()

	local character = player.Character or player.CharacterAdded:Wait()
	local humanoid = character:WaitForChild("Humanoid")

	-- Monitor animations
	connections.animMonitor = RunService.RenderStepped:Connect(function(dt)
		for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do
			if not choppyState[track] then
				setupTrack(track)
			end
		end

		-- Update choppy frames
		for track, state in pairs(choppyState) do
			if not track.IsPlaying then
				choppyState[track] = nil
			else
				state.timer = state.timer + dt
				if state.timer >= FRAME_HOLD_TIME then
					state.timer = 0
					state.currentIndex = (state.currentIndex % #state.snapTimes) + 1
					track.TimePosition = state.snapTimes[state.currentIndex]
					-- Set speed to 0 briefly to hold the frame
					track:AdjustSpeed(0)
				end
			end
		end
	end)

	-- Cleanup on death
	connections.diedConn = humanoid.Died:Connect(function()
		cleanup()
	end)
end

-- Start choppy effect initially
startChoppySystem()

-- Restart on respawn
player.CharacterAdded:Connect(function()
	startChoppySystem()
end)
