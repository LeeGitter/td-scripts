local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

-- Movement speed
local moveSpeed = 16

-- Directions (unit vectors)
local directions = {
    Vector3.new(0,0,-1),    -- N
    Vector3.new(1,0,-1).Unit,  -- NE
    Vector3.new(1,0,0),     -- E
    Vector3.new(1,0,1).Unit,   -- SE
    Vector3.new(0,0,1),     -- S
    Vector3.new(-1,0,1).Unit,  -- SW
    Vector3.new(-1,0,0),    -- W
    Vector3.new(-1,0,-1).Unit  -- NW
}

local function getClosestDirection(vec)
    local closestDir = directions[1]
    local maxDot = -math.huge
    for _, dir in ipairs(directions) do
        local dot = vec:Dot(dir)
        if dot > maxDot then
            maxDot = dot
            closestDir = dir
        end
    end
    return closestDir
end

local inputVector = Vector3.new(0,0,0)

-- Track key states for movement
local keysPressed = {
    W = false,
    A = false,
    S = false,
    D = false,
    Up = false,
    Down = false,
    Left = false,
    Right = false,
}

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    local key = input.KeyCode
    if key == Enum.KeyCode.W or key == Enum.KeyCode.Up then keysPressed.W = true end
    if key == Enum.KeyCode.A or key == Enum.KeyCode.Left then keysPressed.A = true end
    if key == Enum.KeyCode.S or key == Enum.KeyCode.Down then keysPressed.S = true end
    if key == Enum.KeyCode.D or key == Enum.KeyCode.Right then keysPressed.D = true end
end)

UserInputService.InputEnded:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    local key = input.KeyCode
    if key == Enum.KeyCode.W or key == Enum.KeyCode.Up then keysPressed.W = false end
    if key == Enum.KeyCode.A or key == Enum.KeyCode.Left then keysPressed.A = false end
    if key == Enum.KeyCode.S or key == Enum.KeyCode.Down then keysPressed.S = false end
    if key == Enum.KeyCode.D or key == Enum.KeyCode.Right then keysPressed.D = false end
end)

RunService.RenderStepped:Connect(function()
    local moveX = 0
    local moveZ = 0
    
    if keysPressed.W then moveZ -= 1 end
    if keysPressed.S then moveZ += 1 end
    if keysPressed.A then moveX -= 1 end
    if keysPressed.D then moveX += 1 end
    
    if moveX == 0 and moveZ == 0 then
        humanoid.WalkSpeed = 0
        return
    end
    
    local rawDirection = Vector3.new(moveX, 0, moveZ).Unit
    local snappedDir = getClosestDirection(rawDirection)
    
    -- Set HumanoidRootPart orientation instantly to face snapped direction
    local lookCFrame = CFrame.new(hrp.Position, hrp.Position + Vector3.new(snappedDir.X, 0, snappedDir.Z))
    hrp.CFrame = CFrame.new(hrp.Position) * CFrame.Angles(0, lookCFrame.LookVector:AngleTo(Vector3.new(0,0,-1)), 0)
    hrp.CFrame = CFrame.new(hrp.Position, hrp.Position + snappedDir)  -- direct facing
    
    -- Move character forward in snapped direction
    humanoid.WalkSpeed = moveSpeed
    humanoid:Move(snappedDir, false)
end)
