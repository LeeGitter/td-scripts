local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local hrp = character:WaitForChild("HumanoidRootPart")

humanoid.AutoRotate = false

local keysPressed = {
    W = false,
    A = false,
    S = false,
    D = false,
}

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    local key = input.KeyCode
    if key == Enum.KeyCode.W then keysPressed.W = true end
    if key == Enum.KeyCode.A then keysPressed.A = true end
    if key == Enum.KeyCode.S then keysPressed.S = true end
    if key == Enum.KeyCode.D then keysPressed.D = true end
end)

UserInputService.InputEnded:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    local key = input.KeyCode
    if key == Enum.KeyCode.W then keysPressed.W = false end
    if key == Enum.KeyCode.A then keysPressed.A = false end
    if key == Enum.KeyCode.S then keysPressed.S = false end
    if key == Enum.KeyCode.D then keysPressed.D = false end
end)

local directions = {
    W = Vector3.new(0,0,-1),
    A = Vector3.new(-1,0,0),
    S = Vector3.new(0,0,1),
    D = Vector3.new(1,0,0),
    WA = Vector3.new(-1,0,-1).Unit,
    WD = Vector3.new(1,0,-1).Unit,
    SA = Vector3.new(-1,0,1).Unit,
    SD = Vector3.new(1,0,1).Unit,
}

local wsToggle = false
local wsTimer = 0
local wsInterval = 0.05 -- 0.05 seconds delay for rapid toggle

RunService.RenderStepped:Connect(function(dt)
    local w,a,s,d = keysPressed.W, keysPressed.A, keysPressed.S, keysPressed.D
    
    if w and s and not a and not d then
        -- WS pressed together, rapidly toggle facing forward/back every 0.05s
        wsTimer = wsTimer + dt
        if wsTimer >= wsInterval then
            wsTimer = 0
            wsToggle = not wsToggle
            local dir = wsToggle and directions.W or directions.S
            local pos = hrp.Position
            local lookAt = pos + Vector3.new(dir.X, 0, dir.Z)
            hrp.CFrame = CFrame.new(pos, lookAt)
        end
        return
    end
    
    -- Reset timer when not WS combo
    wsTimer = 0
    wsToggle = false
    
    local directionVector = nil
    
    if w and a and not s and not d then
        directionVector = directions.WA
    elseif w and d and not s and not a then
        directionVector = directions.WD
    elseif s and a and not w and not d then
        directionVector = directions.SA
    elseif s and d and not w and not a then
        directionVector = directions.SD
    elseif w and not a and not s and not d then
        directionVector = directions.W
    elseif a and not w and not s and not d then
        directionVector = directions.A
    elseif s and not w and not a and not d then
        directionVector = directions.S
    elseif d and not w and not a and not s then
        directionVector = directions.D
    else
        -- No recognized direction or conflicting keys, don't rotate
        return
    end
    
    -- Snap avatar facing direction instantly
    local pos = hrp.Position
    local lookAt = pos + Vector3.new(directionVector.X, 0, directionVector.Z)
    hrp.CFrame = CFrame.new(pos, lookAt)
end)
