local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local humanoid, hrp

local flying = false
local cooldown = false
local cooldownTime = 35
local staminaTime = 6
local speedBoost = 75
local baseSpeed = 16
local boostRate = 20

local staminaGui, bar, cooldownGui, cooldownLabel
local conn, flyVel
local stamina, currentSpeed

-- GUI
local function makeGui()
	staminaGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
	staminaGui.Name = "FlightStaminaGui"
	local bg = Instance.new("Frame", staminaGui)
	bg.AnchorPoint = Vector2.new(1, 0.5)
	bg.Position = UDim2.new(1, -10, 0.5, 0)
	bg.Size = UDim2.new(0, 12, 0, 200)
	bg.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	bar = Instance.new("Frame", bg)
	bar.AnchorPoint = Vector2.new(0, 1)
	bar.Size = UDim2.new(1, 0, 1, 0)
	bar.Position = UDim2.new(0, 0, 1, 0)
	bar.BackgroundColor3 = Color3.fromRGB(0, 200, 255)

	cooldownGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
	cooldownGui.Name = "FlightCooldownGui"
	cooldownLabel = Instance.new("TextLabel", cooldownGui)
	cooldownLabel.Size = UDim2.new(0, 60, 0, 20)
	cooldownLabel.Position = UDim2.new(1, -70, 0.5, -110)
	cooldownLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	cooldownLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	cooldownLabel.Font = Enum.Font.Code
	cooldownLabel.TextSize = 14
	cooldownLabel.Text = "Ready"
end

-- Reset
local function stopFly()
	flying = false
	if conn then conn:Disconnect() end
	if flyVel then flyVel:Destroy() end
	humanoid.WalkSpeed = baseSpeed
	if staminaGui then staminaGui:Destroy() end
	cooldown = true
	local t = cooldownTime
	coroutine.wrap(function()
		while t > 0 do
			cooldownLabel.Text = string.format("%d(%d)", math.floor(t), math.floor((t % 1) * 10))
			RunService.Heartbeat:Wait()
			t -= RunService.Heartbeat:Wait()
		end
		cooldown = false
		cooldownLabel.Text = "Ready"
	end)()
end

-- Setup
local function startFly()
	if flying or cooldown then return end
	char = player.Character or player.CharacterAdded:Wait()
	humanoid = char:WaitForChild("Humanoid")
	hrp = char:WaitForChild("HumanoidRootPart")
	if humanoid.FloorMaterial ~= Enum.Material.Air then return end

	makeGui()

	flying = true
	stamina = staminaTime
	currentSpeed = baseSpeed
	humanoid:ChangeState(Enum.HumanoidStateType.Freefall)
	humanoid.WalkSpeed = baseSpeed

	flyVel = Instance.new("BodyVelocity", hrp)
	flyVel.MaxForce = Vector3.new(0, 1e5, 0)
	flyVel.P = 10000
	flyVel.Velocity = Vector3.new(0, 0, 0)

	conn = RunService.RenderStepped:Connect(function(dt)
		if not flying then return end

		if humanoid.FloorMaterial ~= Enum.Material.Air then
			stopFly()
			return
		end

		if UIS:IsKeyDown(Enum.KeyCode.Space) then
			stamina -= (dt * 0.5)
			currentSpeed = math.min(currentSpeed + boostRate * dt, speedBoost)
			flyVel.Velocity = Vector3.new(0, -3, 0) -- gentle descent
		else
			stamina -= dt
			currentSpeed = baseSpeed
			flyVel.Velocity = Vector3.new(0, 0, 0) -- hover
		end

		humanoid.WalkSpeed = currentSpeed
		bar.Size = UDim2.new(1, 0, math.clamp(stamina / staminaTime, 0, 1), 0)

		if stamina <= 0 then
			stopFly()
		end
	end)
end

-- Bind
UIS.InputBegan:Connect(function(i, gpe)
	if gpe then return end
	if i.KeyCode == Enum.KeyCode.T then
		startFly()
	end
end)
