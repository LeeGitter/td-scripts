local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local torso = character:WaitForChild("Torso") -- R6 torso

local segmentCount = 15  -- Longer tail: 15 parts total

-- Clear old parts
local crownFolder = workspace:FindFirstChild("VisualizerCrown")
if crownFolder then
    crownFolder:Destroy()
end
crownFolder = Instance.new("Folder")
crownFolder.Name = "VisualizerCrown"
crownFolder.Parent = workspace

local parts = {}

-- Base sizes
local basePartThickness = 0.2
local basePartLength = 2

-- Create parts
for i = 1, segmentCount do
    local part = Instance.new("Part")
    part.Anchored = true
    part.CanCollide = false
    part.Material = Enum.Material.Neon
    part.Transparency = 0
    part.Name = "TailPart" .. i
    part.Color = Color3.fromHSV(i / segmentCount, 1, 1)
    part.Parent = crownFolder
    parts[i] = part
end

-- 1-8: long tail segments, thin and long
for i = 1, 8 do
    parts[i].Size = Vector3.new(basePartThickness, basePartThickness, basePartLength)
end

-- 9-12: hollow square tip parts — these form the frame of the square
local squareThickness = basePartThickness
local squareLength = basePartLength * 1.2

-- Horizontal sides (top and bottom) — X aligned
parts[9].Size = Vector3.new(squareLength, squareThickness, squareThickness)    -- top
parts[10].Size = Vector3.new(squareLength, squareThickness, squareThickness)   -- bottom

-- Vertical sides (left and right) — Z aligned, rotated 90 degrees Y
parts[11].Size = Vector3.new(squareThickness, squareThickness, squareLength)    -- left
parts[12].Size = Vector3.new(squareThickness, squareThickness, squareLength)    -- right

-- 13-14: crossing parts near the square tip
for i = 13, 14 do
    parts[i].Size = Vector3.new(squareThickness * 0.5, squareThickness * 0.5, squareLength * 0.9)
    parts[i].Color = Color3.new(1, 0, 0) -- red crossing parts
end

-- 15: small last part near the square tip
parts[15].Size = Vector3.new(squareThickness * 0.3, squareThickness * 0.3, squareLength * 0.6)
parts[15].Color = Color3.new(0, 1, 0) -- green

-- Wobble timer
local wobbleTime = 0

RunService.Heartbeat:Connect(function(dt)
    wobbleTime = wobbleTime + dt * 5

    -- Tail base at back waist of torso:
    local backWaistOffset = Vector3.new(0, -torso.Size.Y / 2, torso.Size.Z / 2)
    local baseCFrame = torso.CFrame * CFrame.new(backWaistOffset)

    -- Tail segments 1-8 extend backward along torso's -Z axis:
    for i = 1, 8 do
        local offsetZ = -basePartLength * (i - 1)
        local swayX = math.sin(wobbleTime + i) * 0.15
        local swayY = math.cos(wobbleTime * 1.5 + i) * 0.05
        local localOffset = Vector3.new(swayX, swayY - 0.1 * i, offsetZ)
        local worldPos = baseCFrame:PointToWorldSpace(localOffset)

        -- Correct rotation: rotate part so its Z axis points backward (-Z torso), apply wobble rotation locally
        -- We multiply torso's rotation with wobble rotations around X and Z axes
        local wobbleRotation = CFrame.Angles(math.rad(swayY * 10), 0, math.rad(swayX * 20))
        parts[i].CFrame = CFrame.new(worldPos) * baseCFrame.Rotation * wobbleRotation
    end

    -- Square tip parts 9-12 arranged properly as a hollow square frame at tail tip:
    -- Position square tip center after segment 8
    local tipLocalPos = Vector3.new(0, -0.1, -basePartLength * 8)
    local tipCFrame = baseCFrame * CFrame.new(tipLocalPos)

    local halfLen = squareLength / 2

    -- Top side (part 9): offset +X, no rotation
    parts[9].CFrame = tipCFrame * CFrame.new(halfLen, 0, 0)

    -- Bottom side (part 10): offset -X, no rotation
    parts[10].CFrame = tipCFrame * CFrame.new(-halfLen, 0, 0)

    -- Left side (part 11): offset +Z, rotated 90° Y
    parts[11].CFrame = tipCFrame * CFrame.new(0, 0, halfLen) * CFrame.Angles(0, math.rad(90), 0)

    -- Right side (part 12): offset -Z, rotated 90° Y
    parts[12].CFrame = tipCFrame * CFrame.new(0, 0, -halfLen) * CFrame.Angles(0, math.rad(90), 0)

    -- Crossing parts 13 and 14: intersecting inside the square
    parts[13].CFrame = tipCFrame * CFrame.Angles(math.rad(45), 0, 0)
    parts[14].CFrame = tipCFrame * CFrame.Angles(math.rad(-45), 0, 0)

    -- Last part 15: small detail near the square tip with offset and rotation
    parts[15].CFrame = tipCFrame * CFrame.new(0, 0.1, 0) * CFrame.Angles(0, 0, math.rad(30))
end)
