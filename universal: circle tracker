local SoundService = game:GetService("SoundService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")

-- Particle Crown
local crown = Instance.new("ParticleEmitter")
crown.Color = ColorSequence.new(Color3.fromRGB(255, 255, 0))
crown.LightEmission = 1
crown.Size = NumberSequence.new(0.3)
crown.Texture = "rbxassetid://243098098"
crown.Rate = 0
crown.Speed = NumberRange.new(0.5, 1)
crown.Lifetime = NumberRange.new(0.4, 0.6)
crown.Rotation = NumberRange.new(0, 360)
crown.RotSpeed = NumberRange.new(-100, 100)
crown.LockedToPart = true
crown.Parent = hrp

-- Particle Trail
local trail = Instance.new("ParticleEmitter")
trail.Color = ColorSequence.new(Color3.fromRGB(0, 255, 255))
trail.LightEmission = 1
trail.Size = NumberSequence.new(0.2)
trail.Texture = "rbxassetid://243098098"
trail.Rate = 0
trail.Speed = NumberRange.new(1, 2)
trail.Lifetime = NumberRange.new(0.2, 0.3)
trail.Rotation = NumberRange.new(0, 360)
trail.RotSpeed = NumberRange.new(-200, 200)
trail.VelocitySpread = 180
trail.LockedToPart = true
trail.Parent = hrp

-- Function to calculate overall loudness
local function getTotalLoudness()
	local total = 0

	for _, sound in ipairs(SoundService:GetDescendants()) do
		if sound:IsA("Sound") and sound.IsPlaying then
			local boost = sound:IsDescendantOf(workspace) and 1 or 5 -- boost non-3D sounds
			total += (sound.PlaybackLoudness or 0) * boost
		end
	end

	return total
end

-- Adjust particle emission based on loudness
RunService.RenderStepped:Connect(function()
	local loudness = getTotalLoudness()
	local strength = math.clamp(loudness / 800, 0, 5) -- normalize for visuals

	crown.Rate = strength * 25
	crown.Size = NumberSequence.new(strength * 0.2 + 0.3)
	trail.Rate = strength * 40
	trail.Size = NumberSequence.new(strength * 0.15 + 0.2)
end)
