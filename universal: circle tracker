local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local root = char:WaitForChild("HumanoidRootPart")

local tailParts = {}
local tailLength = 16
local baseSize = Vector3.new(0.3, 0.3, 0.5)
local offset = Vector3.new(0, 0.5, 1.5) -- slight downward and behind offset

-- Clean old tail
if char:FindFirstChild("TailBase") then
	char:FindFirstChild("TailBase"):Destroy()
end

-- Base attachment point
local tailBase = Instance.new("Attachment")
tailBase.Name = "TailBase"
tailBase.Position = -root.CFrame.LookVector * offset.Z + Vector3.new(0, offset.Y, 0)
tailBase.Parent = root

-- Create tail segments
for i = 1, tailLength do
	local part = Instance.new("Part")
	part.Anchored = false
	part.CanCollide = false
	part.Size = baseSize + Vector3.new(i * 0.02, i * 0.02, 0)
	part.Material = Enum.Material.Neon
	part.Color = Color3.fromHSV(i / tailLength, 1, 1)
	part.Transparency = 0
	part.Name = "TailSegment_" .. i
	part.CastShadow = false
	part.Parent = workspace

	local att0 = Instance.new("Attachment", part)
	local att1 = Instance.new("Attachment")

	local constraint = Instance.new("BallSocketConstraint")
	constraint.Attachment0 = att0
	constraint.Attachment1 = att1
	constraint.LimitsEnabled = true
	constraint.TwistLimitsEnabled = true
	constraint.UpperAngle = 25
	constraint.TwistLowerAngle = -15
	constraint.TwistUpperAngle = 15
	constraint.Parent = part

	tailParts[i] = {
		part = part,
		att1 = att1
	}
end

-- Weld tail to body with constraints
for i, data in ipairs(tailParts) do
	local part = data.part
	local att1 = data.att1

	if i == 1 then
		att1.Parent = root
		att1.Position = tailBase.Position
	else
		local prevPart = tailParts[i - 1].part
		att1.Parent = prevPart
		att1.Position = Vector3.new(0, 0, -prevPart.Size.Z / 2)
	end

	part.CFrame = root.CFrame * CFrame.new(0, offset.Y, offset.Z + (i * 0.5))
end

-- Add spinning cube to the tail tip
local cube = Instance.new("Part")
cube.Shape = Enum.PartType.Block
cube.Size = Vector3.new(0.8, 0.8, 0.8)
cube.Color = Color3.fromRGB(255, 255, 255)
cube.Material = Enum.Material.Neon
cube.Anchored = false
cube.CanCollide = false
cube.Name = "TailCube"
cube.Parent = workspace

local cubeAtt0 = Instance.new("Attachment", cube)
local cubeAtt1 = Instance.new("Attachment", tailParts[#tailParts].part)

local cubeConstraint = Instance.new("BallSocketConstraint")
cubeConstraint.Attachment0 = cubeAtt0
cubeConstraint.Attachment1 = cubeAtt1
cubeConstraint.Parent = cube

-- Rotate cube
RunService.RenderStepped:Connect(function(dt)
	cube.CFrame = cube.CFrame * CFrame.Angles(0, math.rad(90) * dt, 0)
end)

-- Dynamic wiggle
local previousPos = root.Position
RunService.Heartbeat:Connect(function()
	local velocity = (root.Position - previousPos) * 50
	previousPos = root.Position

	for i, data in ipairs(tailParts) do
		local sway = math.sin(tick() * 3 + i) * 0.15
		local lift = math.cos(tick() * 2 + i) * 0.1
		local vec = Vector3.new(sway, lift, 0)
		local part = data.part

		part.Velocity = velocity + vec * (i / tailLength)
	end
end)
