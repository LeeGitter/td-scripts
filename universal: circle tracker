local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HRP = Character:WaitForChild("HumanoidRootPart")

local detectionRadius = 50

-- Cleanup
local existing = workspace:FindFirstChild("AuraParts")
if existing then existing:Destroy() end
local auraFolder = Instance.new("Folder", workspace)
auraFolder.Name = "AuraParts"

-- Create circle base and wedge sections
local function createWedge(angleStart, angleEnd, color)
	local part = Instance.new("Part")
	part.Anchored = true
	part.CanCollide = false
	part.Material = Enum.Material.Neon
	part.Color = color
	part.Transparency = 0.7
	part.Size = Vector3.new(0.1, 0.1, 0.1) -- Small size, will use Mesh for shape
	part.Name = "WedgeSection"

	local wedgeMesh = Instance.new("SpecialMesh", part)
	wedgeMesh.MeshType = Enum.MeshType.FileMesh
	wedgeMesh.MeshId = "rbxassetid://5598318443" -- Rounded wedge mesh
	wedgeMesh.Scale = Vector3.new(50, 0.2, 50)
	wedgeMesh.Offset = Vector3.new(0, 0, 0)
	part.Parent = auraFolder

	return part
end

local sectionColors = {
	Color3.fromRGB(200, 200, 255),
	Color3.fromRGB(200, 255, 200),
	Color3.fromRGB(255, 200, 200),
	Color3.fromRGB(255, 255, 200),
}

local wedgeSections = {}
for i = 1, 4 do
	local wedge = createWedge((i - 1) * 90, i * 90, sectionColors[i])
	table.insert(wedgeSections, wedge)
end

-- Create 3 hovering rings
local function createRing(yOffset, transparency)
	local ring = Instance.new("Part")
	ring.Anchored = true
	ring.CanCollide = false
	ring.Shape = Enum.PartType.Cylinder
	ring.Size = Vector3.new(0.5, 1, 50)
	ring.Material = Enum.Material.Neon
	ring.Color = Color3.fromRGB(255, 255, 255)
	ring.Transparency = transparency
	ring.Name = "HoverRing"
	ring.Orientation = Vector3.new(0, 0, 90)
	ring.Parent = auraFolder
	ring.Position = HRP.Position + Vector3.new(0, yOffset, 0)
	return ring
end

local rings = {
	createRing(2, 0.8), -- top faint
	createRing(1.5, 0.5), -- middle
	createRing(1, 0), -- bottom
}

-- UI for username and avatar
local playerGui = LocalPlayer:WaitForChild("PlayerGui")
local screenGui = Instance.new("ScreenGui", playerGui)
screenGui.Name = "AuraUI"
screenGui.ResetOnSpawn = false

local usernameLabel = Instance.new("TextLabel", screenGui)
usernameLabel.Size = UDim2.new(0, 300, 0, 40)
usernameLabel.Position = UDim2.new(0.5, -150, 0, 10)
usernameLabel.BackgroundTransparency = 1
usernameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
usernameLabel.TextStrokeTransparency = 0
usernameLabel.TextScaled = true
usernameLabel.Font = Enum.Font.GothamBold
usernameLabel.Text = LocalPlayer.Name

local avatarImage = Instance.new("ImageLabel", screenGui)
avatarImage.Size = UDim2.new(0, 64, 0, 64)
avatarImage.Position = UDim2.new(0.5, -32, 0, 50)
avatarImage.BackgroundTransparency = 1
avatarImage.Image = "https://www.roblox.com/headshot-thumbnail/image?userId=" .. LocalPlayer.UserId .. "&width=420&height=420&format=png"

-- Rounded avatar mask
local uicorner = Instance.new("UICorner", avatarImage)
uicorner.CornerRadius = UDim.new(1, 0)

-- Username Billboard for detected players
local function createBillboard(player)
	local billboard = Instance.new("BillboardGui")
	billboard.Size = UDim2.new(0, 200, 0, 30)
	billboard.StudsOffset = Vector3.new(0, 3, 0)
	billboard.AlwaysOnTop = true

	local label = Instance.new("TextLabel", billboard)
	label.Size = UDim2.new(1, 0, 1, 0)
	label.BackgroundTransparency = 1
	label.TextColor3 = Color3.fromHSV(tick() % 5 / 5, 1, 1)
	label.TextScaled = true
	label.Font = Enum.Font.GothamBold
	label.Text = player.Name

	return billboard
end

local billboardMap = {}

-- Update loop
RunService.RenderStepped:Connect(function()
	if not HRP or not HRP.Parent then return end
	local pos = HRP.Position
	local camLook = Camera.CFrame.LookVector

	-- Place and rotate wedges
	for i, wedge in ipairs(wedgeSections) do
		local angle = math.rad((i - 1) * 90 + 45)
		local offset = Vector3.new(math.cos(angle), 0, math.sin(angle)) * 5
		wedge.Position = pos + Vector3.new(0, 0.2, 0)
		wedge.CFrame = CFrame.new(wedge.Position) * CFrame.Angles(0, math.rad((i - 1) * 90), 0)
	end

	-- Place rings and shift hue
	for i, ring in ipairs(rings) do
		ring.Position = pos + Vector3.new(0, ring.Position.Y - ring.Position.Y % 0.05, 0)
		local hue = (tick() * 0.1 + i * 0.1) % 1
		ring.Color = Color3.fromHSV(hue, 0.2, 1)
	end

	-- Detection
	local nearby = {}
	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
			local dist = (player.Character.HumanoidRootPart.Position - pos).Magnitude
			if dist <= detectionRadius then
				local rel = (player.Character.HumanoidRootPart.Position - pos).Unit
				local dot = camLook:Dot(rel)
				local right = camLook:Cross(Vector3.yAxis).Unit:Dot(rel)

				-- Section highlights
				local left = right < -0.3
				local rightS = right > 0.3
				local front = dot > 0.3
				local back = dot < -0.3

				wedgeSections[1].Transparency = (left or front) and 0.3 or 0.7
				wedgeSections[2].Transparency = (rightS or front) and 0.3 or 0.7
				wedgeSections[3].Transparency = (left or back) and 0.3 or 0.7
				wedgeSections[4].Transparency = (rightS or back) and 0.3 or 0.7

				-- Rainbow + name tag
				if not billboardMap[player] then
					local bb = createBillboard(player)
					bb.Parent = player.Character:FindFirstChild("Head")
					billboardMap[player] = bb
				end

				local hue = tick() % 5 / 5
				player.Character:FindFirstChild("HumanoidRootPart").Color = Color3.fromHSV(hue, 1, 1)
			end
		end
	end
end)
