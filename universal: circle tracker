local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

-- Wing parameters
local wingDistanceBack = 2       -- studs behind HumanoidRootPart
local wingOffsetSide = 1.5       -- studs to side (left/right)
local wingSize = Vector3.new(1, 2, 0.1) -- thin flat parts, like 2D wings
local flapAmplitude = math.rad(20)  -- max flap angle in radians
local flapSpeedMultiplier = 4        -- flap speed factor times movement speed

-- Create wing parts
local leftWing = Instance.new("Part")
leftWing.Size = wingSize
leftWing.Anchored = true
leftWing.CanCollide = false
leftWing.Material = Enum.Material.Neon
leftWing.Color = Color3.fromRGB(255, 255, 255)
leftWing.Name = "LeftWing"
leftWing.Transparency = 0.3
leftWing.Parent = workspace

local rightWing = Instance.new("Part")
rightWing.Size = wingSize
rightWing.Anchored = true
rightWing.CanCollide = false
rightWing.Material = Enum.Material.Neon
rightWing.Color = Color3.fromRGB(255, 255, 255)
rightWing.Name = "RightWing"
rightWing.Transparency = 0.3
rightWing.Parent = workspace

-- Utility to get movement speed magnitude
local function getSpeed()
    local velocity = hrp.Velocity
    velocity = Vector3.new(velocity.X, 0, velocity.Z) -- horizontal only
    return velocity.Magnitude
end

local timeElapsed = 0

RunService.RenderStepped:Connect(function(dt)
    if not hrp or not humanoid or humanoid.Health <= 0 then
        leftWing.Transparency = 1
        rightWing.Transparency = 1
        return
    end

    timeElapsed = timeElapsed + dt

    local speed = getSpeed()
    local flapSpeed = speed * flapSpeedMultiplier
    local flapAngle = math.sin(timeElapsed * flapSpeed) * flapAmplitude

    -- Position base: behind the HumanoidRootPart
    local hrpCFrame = hrp.CFrame
    local basePos = hrpCFrame.Position - hrpCFrame.LookVector * wingDistanceBack

    -- Left wing position and orientation
    local leftOffset = hrpCFrame.RightVector * -wingOffsetSide
    local leftPos = basePos + leftOffset + Vector3.new(0, 1, 0)  -- slightly up
    leftWing.CFrame = CFrame.new(leftPos) 
        * CFrame.Angles(0, 0, flapAngle)  -- flap rotation around Z-axis (like wing flapping)
        * CFrame.new(0, 0, 0)  -- no offset needed here

    -- Right wing position and orientation
    local rightOffset = hrpCFrame.RightVector * wingOffsetSide
    local rightPos = basePos + rightOffset + Vector3.new(0, 1, 0)
    rightWing.CFrame = CFrame.new(rightPos) 
        * CFrame.Angles(0, 0, -flapAngle)
        * CFrame.new(0, 0, 0)

    -- Make sure wings are visible
    leftWing.Transparency = 0.3
    rightWing.Transparency = 0.3
end)

-- Cleanup wings on character respawn
player.CharacterAdded:Connect(function(char)
    character = char
    hrp = character:WaitForChild("HumanoidRootPart")
    humanoid = character:WaitForChild("Humanoid")
end)
