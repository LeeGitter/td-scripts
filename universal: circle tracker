local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local root = character:WaitForChild("HumanoidRootPart")

-- Tail settings
local TAIL_LENGTH = 17
local LENGTH_PER_SEGMENT = 1.5
local SEGMENT_SIZE = Vector3.new(0.6, 0.6, LENGTH_PER_SEGMENT)
local tailParts = {}
local idleTime = 0
local isIdle = false

-- Create the tail segments
for i = 1, TAIL_LENGTH - 1 do
	local part = Instance.new("Part")
	part.Size = SEGMENT_SIZE
	part.Material = Enum.Material.SmoothPlastic
	part.Color = Color3.fromRGB(200 - i*5, 100 + i*5, 255 - i*7)
	part.Anchored = false
	part.CanCollide = false
	part.Massless = true
	part.CFrame = root.CFrame * CFrame.new(0, -1, i * -LENGTH_PER_SEGMENT)
	part.Name = "TailPart"
	part.Parent = workspace
	table.insert(tailParts, part)

	-- Attach segments with constraints
	if i > 1 then
		local a0 = Instance.new("Attachment", tailParts[i-1])
		a0.Position = Vector3.new(0, 0, -LENGTH_PER_SEGMENT/2)
		local a1 = Instance.new("Attachment", part)
		a1.Position = Vector3.new(0, 0, LENGTH_PER_SEGMENT/2)

		local ap = Instance.new("AlignPosition")
		ap.Attachment0 = a1
		ap.Attachment1 = a0
		ap.Responsiveness = 20
		ap.MaxForce = 5000
		ap.RigidityEnabled = false
		ap.Parent = part

		local ao = Instance.new("AlignOrientation")
		ao.Attachment0 = a1
		ao.Attachment1 = a0
		ao.Responsiveness = 15
		ao.MaxTorque = 5000
		ao.RigidityEnabled = false
		ao.Parent = part
	end
end

-- Create the white glowing cube as the final segment
local cube = Instance.new("Part")
cube.Size = Vector3.new(1, 1, 1)
cube.Material = Enum.Material.Neon
cube.Color = Color3.fromRGB(255, 255, 255)
cube.Anchored = false
cube.CanCollide = false
cube.Massless = true
cube.Name = "TailCube"
cube.Parent = workspace

-- Attachments for cube
local cubeAttach0 = Instance.new("Attachment", cube)
cubeAttach0.Name = "Attachment0"
cubeAttach0.Position = Vector3.new(0, 0, -3) -- Offset back 3 studs

-- Attach to final tail segment
local tipAttach = Instance.new("Attachment", tailParts[#tailParts])
tipAttach.Name = "AttachmentTip"
tipAttach.Position = Vector3.new(0, 0, -LENGTH_PER_SEGMENT/2)

local alignPosCube = Instance.new("AlignPosition")
alignPosCube.Attachment0 = cubeAttach0
alignPosCube.Attachment1 = tipAttach
alignPosCube.MaxForce = 10000
alignPosCube.Responsiveness = 50
alignPosCube.RigidityEnabled = false
alignPosCube.Parent = cube

local alignOriCube = Instance.new("AlignOrientation")
alignOriCube.Attachment0 = cubeAttach0
alignOriCube.Attachment1 = tipAttach
alignOriCube.MaxTorque = 10000
alignOriCube.Responsiveness = 50
alignOriCube.RigidityEnabled = false
alignOriCube.Parent = cube

-- Color shift and rotate the cube
task.spawn(function()
	local hue = 0
	while true do
		hue += 0.01
		if hue > 1 then hue = 0 end
		cube.Color = Color3.fromHSV(hue, 1, 1)
		cube.CFrame *= CFrame.Angles(0, math.rad(2), 0)
		task.wait(0.03)
	end
end)

-- Tail follows the root position
RunService.Heartbeat:Connect(function(dt)
	local moveDirection = character:FindFirstChildWhichIsA("Humanoid") and character:FindFirstChildWhichIsA("Humanoid").MoveDirection
	if moveDirection and moveDirection.Magnitude > 0.1 then
		idleTime = 0
		isIdle = false
	else
		idleTime += dt
	end

	tailParts[1].CFrame = root.CFrame * CFrame.new(0, -1, -1)

	if isIdle then return end

	for i = 2, #tailParts do
		local prev = tailParts[i - 1]
		local current = tailParts[i]
		local targetPos = prev.Position - prev.CFrame.LookVector * LENGTH_PER_SEGMENT
		local direction = (targetPos - current.Position)
		current.Velocity = direction.Unit * math.min(direction.Magnitude * 10, 60)
	end
end)

-- Idle/bored animation
task.spawn(function()
	local modes = {"curl", "helicopter", "wave"}

	while true do
		if idleTime > 4 and not isIdle then
			isIdle = true
			local mode = modes[math.random(1, #modes)]
			if mode == "curl" then
				for i = 1, #tailParts do
					local tween = TweenService:Create(tailParts[i], TweenInfo.new(0.3, Enum.EasingStyle.Sine), {
						CFrame = tailParts[1].CFrame * CFrame.Angles(0, 0, math.rad(i * 20)) * CFrame.new(0, 0, -i * LENGTH_PER_SEGMENT)
					})
					tween:Play()
				end
			elseif mode == "helicopter" then
				for i = 1, 50 do
					for j = 2, #tailParts do
						tailParts[j].CFrame = tailParts[j - 1].CFrame * CFrame.Angles(0, math.rad(20), 0) * CFrame.new(0, 0, -LENGTH_PER_SEGMENT)
					end
					task.wait(0.03)
				end
			elseif mode == "wave" then
				for t = 0, math.pi * 4, 0.2 do
					for i = 2, #tailParts do
						local offset = math.sin(t + i * 0.5) * 0.5
						tailParts[i].CFrame = tailParts[i - 1].CFrame * CFrame.new(offset, 0, -LENGTH_PER_SEGMENT)
					end
					task.wait(0.03)
				end
			end
		end
		task.wait(0.1)
	end
end)
