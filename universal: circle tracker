local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local rootPart = character:WaitForChild("HumanoidRootPart")

-- Tail configuration
local tailLength = 16
local segmentDistance = 1
local tailParts = {}

-- Create a folder for organization
local tailFolder = Instance.new("Folder")
tailFolder.Name = "TailParts"
tailFolder.Parent = workspace

-- Build tail parts
for i = 1, tailLength do
	local part = Instance.new("Part")
	part.Size = Vector3.new(0.6 + (i * 0.1), 0.6 + (i * 0.1), 0.6 + (i * 0.1))
	part.Material = Enum.Material.Neon
	part.Anchored = true
	part.CanCollide = false
	part.Color = Color3.fromHSV((i / tailLength), 1, 1)
	part.Shape = Enum.PartType.Block
	part.Parent = tailFolder
	tailParts[#tailParts + 1] = part
end

-- Create glowing white tip
local tipPart = Instance.new("Part")
tipPart.Size = Vector3.new(1.5, 1.5, 1.5)
tipPart.Shape = Enum.PartType.Ball
tipPart.Material = Enum.Material.Neon
tipPart.Anchored = true
tipPart.CanCollide = false
tipPart.Color = Color3.new(1, 1, 1)
tipPart.Parent = tailFolder

-- Trail color rotation
local hue = 0

-- Wobble and movement
local velocity = Vector3.zero
local lastPosition = rootPart.Position
local idleTimer = 0

RunService.RenderStepped:Connect(function(dt)
	local currentPosition = rootPart.Position
	local moveDir = (currentPosition - lastPosition) / dt
	velocity = velocity:Lerp(moveDir, 0.1)
	lastPosition = currentPosition

	local speed = velocity.Magnitude
	local isIdle = speed < 1
	if isIdle then
		idleTimer += dt
	else
		idleTimer = 0
	end

	-- Color update
	hue = (hue + dt * 0.2) % 1
	for i, part in ipairs(tailParts) do
		part.Color = Color3.fromHSV((hue + i * 0.03) % 1, 1, 1)
	end

	local basePos = rootPart.Position - Vector3.new(0, 2, 0)
	local forward = rootPart.CFrame.LookVector
	local up = rootPart.CFrame.UpVector
	local right = rootPart.CFrame.RightVector

	for i, part in ipairs(tailParts) do
		local offset = forward * -segmentDistance * i
		local wobble = math.sin(tick() * 3 + i) * right * 0.4 + math.cos(tick() * 3 + i) * up * 0.4
		if idleTimer > 4 then
			local mode = math.floor(tick()) % 3
			if mode == 0 then
				wobble = Vector3.new(math.sin(tick() * 5 + i), math.cos(tick() * 5 + i * 0.2), 0) * 2
			elseif mode == 1 then
				wobble = Vector3.new(0, math.sin(tick() * 8 + i) * 1.5, math.cos(tick() * 8 + i * 0.2)) * 1.5
			else
				wobble = Vector3.new(math.sin(tick() * 8 + i), 0, math.cos(tick() * 8 + i * 0.2)) * 1.5
			end
		end
		part.Position = basePos + offset + wobble
	end

	-- Tip cube: 5 studs BEHIND the tail tip using the direction of last segment
	local lastPart = tailParts[#tailParts]
	local backDir = (lastPart.Position - tailParts[#tailParts - 1].Position).Unit
	local spin = CFrame.Angles(0, tick() * 2, 0)
	tipPart.CFrame = CFrame.new(lastPart.Position + backDir * 10) * spin
	tipPart.Color = Color3.fromHSV((hue + 0.5) % 1, 0.7, 1)
end)
