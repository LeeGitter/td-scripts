local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local head = character:WaitForChild("Head")

local sound = head:FindFirstChildWhichIsA("Sound")
if not sound then
    warn("No sound found in head!")
    return
end

-- Create rainbow highlight
local highlight = Instance.new("Highlight")
highlight.Adornee = character
highlight.Enabled = false
highlight.FillTransparency = 1
highlight.OutlineTransparency = 1
highlight.Parent = character

-- Tween to fade out
local function triggerHighlight()
    highlight.Enabled = true
    highlight.FillColor = Color3.fromHSV(tick() % 5 / 5, 1, 1)
    highlight.OutlineColor = highlight.FillColor
    highlight.FillTransparency = 0
    highlight.OutlineTransparency = 0

    task.delay(0.2, function()
        local tweenInfo = TweenInfo.new(0.8, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
        TweenService:Create(highlight, tweenInfo, {
            FillTransparency = 1,
            OutlineTransparency = 1
        }):Play()

        task.delay(0.8, function()
            highlight.Enabled = false
        end)
    end)
end

-- Peak detection and triggering
local peakLoudness = 0
local peakCooldown = 0
local checkInterval = 0.1
local timeSinceLastCheck = 0

RunService.Heartbeat:Connect(function(dt)
    if not sound.IsPlaying then return end

    timeSinceLastCheck += dt
    if timeSinceLastCheck >= checkInterval then
        timeSinceLastCheck = 0
        local loudness = sound.PlaybackLoudness

        -- Store new peak every second
        peakCooldown += checkInterval
        if loudness > peakLoudness then
            peakLoudness = loudness
        end

        if peakCooldown >= 1 then
            peakCooldown = 0
            peakLoudness = math.clamp(peakLoudness, 10, 500) -- prevent 0/low thresholds
        end

        -- Trigger highlight if loudness reaches peak
        if loudness >= peakLoudness - 5 then
            triggerHighlight()
            peakLoudness = 0 -- Reset for next second
            peakCooldown = 0
        end
    end
end)
