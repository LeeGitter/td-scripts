local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local torso = character:WaitForChild("Torso")

-- Settings
local tailLength = 14
local tailSpacing = 0.8
local tailParts = {}
local rainbowColors = {}

for i = 0, 360, 30 do
	local h = i / 360
	table.insert(rainbowColors, Color3.fromHSV(h, 1, 1))
end

-- Cleanup
local oldTail = character:FindFirstChild("RainbowTail")
if oldTail then oldTail:Destroy() end

-- Tail Folder
local tailFolder = Instance.new("Folder")
tailFolder.Name = "RainbowTail"
tailFolder.Parent = character

-- Create tail parts
for i = 1, tailLength do
	local part = Instance.new("Part")
	part.Size = Vector3.new(0.6, 0.6, 0.6)
	part.Shape = Enum.PartType.Block
	part.Anchored = false
	part.CanCollide = false
	part.Material = Enum.Material.Neon
	part.Color = rainbowColors[(i * 3) % #rainbowColors + 1]
	part.Massless = true
	part.Parent = tailFolder

	local att0 = Instance.new("Attachment", part)
	local constraint = Instance.new("AlignPosition")
	constraint.Attachment0 = att0
	constraint.RigidityEnabled = false
	constraint.ReactionForceEnabled = false
	constraint.MaxForce = math.huge
	constraint.Responsiveness = 15 - (i * 0.8)
	constraint.ApplyAtCenterOfMass = true
	constraint.Parent = part

	table.insert(tailParts, {
		Part = part,
		Constraint = constraint,
		Attachment = att0,
	})
end

-- Update loop
RunService.Stepped:Connect(function(_, dt)
	local baseCF = torso.CFrame

	for i, segment in ipairs(tailParts) do
		local desiredPos = baseCF.Position - baseCF.LookVector * i * tailSpacing
		segment.Constraint.Position = desiredPos
	end
end)
