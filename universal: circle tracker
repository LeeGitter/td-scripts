local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local torso = character:WaitForChild("Torso")

-- Settings
local tailLength = 4
local segmentLength = 1.5
local tailOffset = Vector3.new(0, -0.5, 1.5)

-- Cleanup old tail
if character:FindFirstChild("DynamicTail") then
	character.DynamicTail:Destroy()
end

local tailModel = Instance.new("Model")
tailModel.Name = "DynamicTail"
tailModel.Parent = character

-- Create segments
local segments = {}
local lastAttachment = Instance.new("Attachment")
lastAttachment.Name = "RootAttachment"
lastAttachment.Parent = torso
lastAttachment.Position = tailOffset

for i = 1, tailLength do
	local part = Instance.new("Part")
	part.Size = Vector3.new(0.4, 0.4, segmentLength)
	part.Anchored = false
	part.CanCollide = false
	part.Massless = true
	part.Material = Enum.Material.Neon
	part.Color = Color3.fromHSV((i / tailLength), 1, 1)
	part.Name = "TailSegment" .. i
	part.Parent = tailModel

	local att0 = Instance.new("Attachment")
	att0.Position = Vector3.new(0, 0, -segmentLength / 2)
	att0.Parent = part

	local att1 = Instance.new("Attachment")
	att1.Position = Vector3.new(0, 0, segmentLength / 2)
	att1.Parent = part

	local ball = Instance.new("BallSocketConstraint")
	ball.Attachment0 = lastAttachment
	ball.Attachment1 = att0
	ball.LimitsEnabled = true
	ball.TwistLimitsEnabled = true
	ball.UpperAngle = 30
	ball.TwistLowerAngle = -15
	ball.TwistUpperAngle = 15
	ball.Parent = part

	local align = Instance.new("AlignOrientation")
	align.Attachment0 = att0
	align.Attachment1 = lastAttachment
	align.Mode = Enum.OrientationAlignmentMode.OneAttachment
	align.ReactionTorqueEnabled = true
	align.Responsiveness = 10
	align.MaxTorque = 10000
	align.Parent = part

	table.insert(segments, {
		Part = part,
		Align = align,
		Attachment = att0
	})

	lastAttachment = att1
end

-- Add wobble based on movement
local prevVelocity = Vector3.zero
RunService.RenderStepped:Connect(function()
	local velocity = torso.Velocity
	local delta = (velocity - prevVelocity).Magnitude

	for i, data in ipairs(segments) do
		local align = data.Align
		local strength = math.clamp(delta * 0.02, 0, 1)
		align.Responsiveness = 5 + (strength * (tailLength - i + 1))
	end

	prevVelocity = velocity
end)
