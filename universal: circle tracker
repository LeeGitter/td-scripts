local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local SoundService = game:GetService("SoundService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local head = char:WaitForChild("Head")
local hrp = char:WaitForChild("HumanoidRootPart")
local humanoid = char:WaitForChild("Humanoid")

-- SETTINGS
local numCrownParts = 12
local crownRadius = 3
local tailLength = 14
local tailSpacing = 0.6
local rainbowColors = {}
for i = 0, 360, 30 do
	table.insert(rainbowColors, Color3.fromHSV(i / 360, 1, 1))
end

-- CLEANUP
for _, obj in ipairs(char:GetChildren()) do
	if obj.Name == "RainbowCrown" or obj.Name == "RainbowTail" then
		obj:Destroy()
	end
end

-- STORAGE
local crownFolder = Instance.new("Folder", char)
crownFolder.Name = "RainbowCrown"
local crownParts = {}

local tailFolder = Instance.new("Folder", char)
tailFolder.Name = "RainbowTail"
local tailParts = {}

-- CREATE CROWN (Part-based with physics wobble)
for i = 1, numCrownParts do
	local part = Instance.new("Part")
	part.Size = Vector3.new(0.3, 1.5, 0.3)
	part.Anchored = false
	part.CanCollide = false
	part.Material = Enum.Material.Neon
	part.Color = rainbowColors[i % #rainbowColors + 1]
	part.Name = "CrownSegment"
	part.Massless = true
	part.Parent = crownFolder

	local attachment = Instance.new("Attachment", head)
	local a2 = Instance.new("Attachment", part)

	local spring = Instance.new("SpringConstraint")
	spring.Attachment0 = attachment
	spring.Attachment1 = a2
	spring.Stiffness = 50
	spring.Damping = 2
	spring.Parent = part

	table.insert(crownParts, {
		part = part,
		angleOffset = (360 / numCrownParts) * i
	})
end

-- CREATE TAIL (Parts get bigger toward the tip)
for i = 1, tailLength do
	local size = 0.5 + (i / tailLength) * 0.8
	local part = Instance.new("Part")
	part.Size = Vector3.new(size, size, size)
	part.Anchored = true
	part.CanCollide = false
	part.Material = Enum.Material.Neon
	part.Color = rainbowColors[((i * 3) % #rainbowColors) + 1]
	part.Name = "TailSegment"
	part.Parent = tailFolder
	table.insert(tailParts, part)
end

-- AFTERIMAGE
local function createAfterimage()
	local clone = char:Clone()
	for _, d in ipairs(clone:GetDescendants()) do
		if d:IsA("BasePart") then
			d.Anchored = true
			d.CanCollide = false
			d.Transparency = 0.65
			d.Material = Enum.Material.Neon
			d.Color = rainbowColors[math.random(1, #rainbowColors)]
		elseif d:IsA("Humanoid") then
			d:Destroy()
		elseif d:IsA("Script") or d:IsA("LocalScript") then
			d:Destroy()
		end
	end
	clone:PivotTo(char:GetPivot())
	clone.Parent = workspace
	game:GetService("Debris"):AddItem(clone, 0.4)
end

-- AUDIO INTENSITY
local loudness = 0
RunService.RenderStepped:Connect(function()
	local total = 0
	for _, s in ipairs(SoundService:GetDescendants()) do
		if s:IsA("Sound") and s.IsPlaying then
			total += (s.PlaybackLoudness or 0) * 0.2
		end
	end
	for _, s in ipairs(head:GetDescendants()) do
		if s:IsA("Sound") and s.IsPlaying then
			total += s.PlaybackLoudness or 0
		end
	end
	loudness = math.clamp(total / 100, 0.8, 3)
end)

-- CROWN + TAIL UPDATES
RunService.RenderStepped:Connect(function(dt)
	-- Crown: wobble with head and hover in circle
	for _, data in ipairs(crownParts) do
		local part = data.part
		local angle = math.rad(data.angleOffset + tick() * 80)
		local offset = Vector3.new(math.cos(angle), 0.5, math.sin(angle)) * crownRadius
		local finalPos = head.Position + head.CFrame:VectorToWorldSpace(offset + Vector3.new(0, 2, 0))
		part.AssemblyLinearVelocity = (finalPos - part.Position) * 10
		part.Size = Vector3.new(0.3, 0.8 * loudness, 0.3)
	end

	-- Tail: follow HRP with lag
	local baseCF = hrp.CFrame
	for i, part in ipairs(tailParts) do
		local offset = Vector3.new(0, -0.4, -i * tailSpacing)
		local targetPos = baseCF:PointToWorldSpace(offset)
		part.Position = part.Position:Lerp(targetPos, dt * 12)
	end
end)

-- HOP LOGIC
local lastHop = 0
UserInputService.InputBegan:Connect(function(input, gp)
	if gp or input.KeyCode ~= Enum.KeyCode.Space then return end
	local now = tick()
	if now - lastHop < 0.5 then return end
	lastHop = now

	-- Apply upward and forward velocity
	local bv = Instance.new("BodyVelocity")
	bv.Velocity = Vector3.new(0, 25, 0) + hrp.CFrame.LookVector * 50
	bv.MaxForce = Vector3.new(1, 1, 1) * 1e5
	bv.P = 1e4
	bv.Parent = hrp
	game.Debris:AddItem(bv, 0.1)

	-- Play animation
	local anim = Instance.new("Animation")
	anim.AnimationId = "rbxassetid://125869734469543"
	local track = humanoid:LoadAnimation(anim)
	track.Priority = Enum.AnimationPriority.Action
	track:Play()
	game.Debris:AddItem(anim, 1)

	-- Afterimages (5 total)
	for i = 1, 5 do
		task.delay(i * 0.02, createAfterimage)
	end
end)
