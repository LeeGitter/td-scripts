local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local rootPart = character:WaitForChild("HumanoidRootPart")

local wingSize = Vector3.new(3, 3, 0.1)
local flapSpeedMultiplier = 5
local afterimageLifetime = 0.5
local afterimageFadeTime = 0.3
local afterimageSpawnInterval = 0.06
local wingImageId = "rbxassetid://75171109405668"

local wingsFolder = workspace:FindFirstChild("LocalWingsFolder")
if wingsFolder then wingsFolder:Destroy() end
wingsFolder = Instance.new("Folder", workspace)
wingsFolder.Name = "LocalWingsFolder"

local function createWing()
	local wing = Instance.new("Part")
	wing.Name = "Wing"
	wing.Size = wingSize
	wing.Anchored = true
	wing.CanCollide = false
	wing.CanQuery = false
	wing.CanTouch = false
	wing.Transparency = 1
	wing.Material = Enum.Material.Neon
	wing.CastShadow = false
	wing.Parent = wingsFolder

	local decal = Instance.new("Decal")
	decal.Name = "WingImage"
	decal.Face = Enum.NormalId.Front
	decal.Texture = wingImageId
	decal.Transparency = 0
	decal.Parent = wing

	return wing
end

local leftWing = createWing()
local rightWing = createWing()

local flapAngle = 0
local lastAfterimageTime = 0

local function createAfterimage(originalWing, isLeft)
	local clone = originalWing:Clone()
	clone.Anchored = true
	clone.Parent = wingsFolder
	clone.Transparency = 0.5

	local hue = tick() % 5 / 5
	clone.Color = Color3.fromHSV(hue, 1, 1)

	local image = clone:FindFirstChild("WingImage")
	if image then
		image.Transparency = 0.5
		image.Color3 = clone.Color
	end

	local start = tick()
	RunService.Heartbeat:Connect(function()
		local t = tick() - start
		if t > afterimageLifetime then
			clone:Destroy()
		elseif t > (afterimageLifetime - afterimageFadeTime) then
			local alpha = 1 - (afterimageLifetime - t) / afterimageFadeTime
			clone.Transparency = alpha
			if image then
				image.Transparency = alpha
			end
		end
	end)
end

-- Handle respawn
local function onCharacterAdded(char)
	character = char
	rootPart = char:WaitForChild("HumanoidRootPart")
end
player.CharacterAdded:Connect(onCharacterAdded)

RunService.Heartbeat:Connect(function(dt)
	if not character or not character.Parent then return end
	if not rootPart or not rootPart.Parent then return end

	local speed = rootPart.Velocity.Magnitude
	flapAngle += dt * flapSpeedMultiplier * math.clamp(speed / 10, 0, 3)

	local offsetAngle = math.sin(flapAngle) * math.rad(25)

	local baseCFrame = rootPart.CFrame

	-- Position wings relative to player
	leftWing.CFrame = baseCFrame * CFrame.new(-2.5, 1.5, -1.2) * CFrame.Angles(0, 0, offsetAngle)
	rightWing.CFrame = baseCFrame * CFrame.new(2.5, 1.5, -1.2) * CFrame.Angles(0, math.rad(180), -offsetAngle)

	-- Afterimages
	if speed > 2 and tick() - lastAfterimageTime > afterimageSpawnInterval then
		createAfterimage(leftWing, true)
		createAfterimage(rightWing, false)
		lastAfterimageTime = tick()
	end
end)
