-- After the for-loop that creates the 16 segments, create the 17th segment cube:

local CUBE_SIZE = Vector3.new(1.5, 1.5, 1.5)

local cube = Instance.new("Part")
cube.Name = "TailSegment_17"
cube.Size = CUBE_SIZE
cube.Material = Enum.Material.Neon
cube.Anchored = false
cube.CanCollide = false
cube.Massless = true
cube.CastShadow = false
cube.Color = Color3.new(1, 1, 1)  -- start white
cube.Parent = tailModel

local cubeAtt0 = Instance.new("Attachment", cube)
cubeAtt0.Name = "Attachment0"
cubeAtt0.Position = Vector3.new(0, 0, -CUBE_SIZE.Z/2)

local cubeAtt1 = Instance.new("Attachment", cube)
cubeAtt1.Name = "Attachment1"
cubeAtt1.Position = Vector3.new(0, 0, CUBE_SIZE.Z/2)

-- Link cube to last tail segment attachment 1 (tip)
local lastAttach = attachments[#segments][2]

local alignPosCube = Instance.new("AlignPosition")
alignPosCube.Attachment0 = cubeAtt0
alignPosCube.Attachment1 = lastAttach
alignPosCube.MaxForce = 10000
alignPosCube.Responsiveness = 50
alignPosCube.RigidityEnabled = false
alignPosCube.Parent = cube

local alignOriCube = Instance.new("AlignOrientation")
alignOriCube.Attachment0 = cubeAtt0
alignOriCube.Attachment1 = lastAttach
alignOriCube.MaxTorque = 10000
alignOriCube.Responsiveness = 50
alignOriCube.Parent = cube

-- Add cube to segments and attachments arrays so it's treated as the 17th segment
table.insert(segments, cube)
table.insert(attachments, {cubeAtt0, cubeAtt1})

-- In the RenderStepped loop, add wobble and color shift for this last segment separately:

RunService.RenderStepped:Connect(function(dt)
	-- ... existing tail wobble code ...

	if #segments == 0 then return end
	local time = tick()
	local velocity = torso.Velocity.Magnitude

	-- Usual tail wobble for first 16 segments (inside your existing logic)
	for i = 1, NUM_SEGMENTS do
		local part = segments[i]
		local att0 = attachments[i][1]

		-- ... your wobble logic for att0.Position ...
	end

	-- Now special wobble and color shift for cube segment (17th)
	local cubeSegment = segments[17]
	local cubeAtt0 = attachments[17][1]

	-- Wobble offset for cube (more subtle, different frequency)
	local wobbleX = math.sin(time * 6) * 0.06
	local wobbleY = math.cos(time * 6.5) * 0.06
	cubeAtt0.Position = Vector3.new(wobbleX, wobbleY, -CUBE_SIZE.Z/2)

	-- Spin cube gently (adjust cube.CFrame relative to AlignOrientation)
	cubeSegment.CFrame = cubeSegment.CFrame * CFrame.Angles(0, math.rad(5), math.rad(3))

	-- Pastel-ish color shifting on white base
	local hue = (time * 0.2) % 1
	local pastelColor = Color3.fromHSV(hue, 0.2, 1)
	-- Blend pastel color with white base softly
	cubeSegment.Color = Color3.new(
		math.clamp(1 - pastelColor.R * 0.6, 0, 1),
		math.clamp(1 - pastelColor.G * 0.6, 0, 1),
		math.clamp(1 - pastelColor.B * 0.6, 0, 1)
	)
end)
