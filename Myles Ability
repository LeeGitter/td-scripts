--// Services
local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

--// Setup
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

--// Animations
local descentAnim = Instance.new("Animation")
descentAnim.AnimationId = "rbxassetid://77249297287605"

local descentTrack = humanoid:LoadAnimation(descentAnim)
descentTrack.Priority = Enum.AnimationPriority.Action4

--// State
local descending = false
local descentForce = nil
local spaceHeld = false
local descentConnection = nil

--// Clean physics
local function purgePhysics()
    for _, obj in ipairs(rootPart:GetChildren()) do
        if obj:IsA("BodyVelocity") or obj:IsA("BodyForce") or obj:IsA("BodyPosition") then
            obj:Destroy()
        end
    end
end

--// Cancel descent
local function cancelDescent()
    descending = false
    if descentForce then
        descentForce:Destroy()
        descentForce = nil
    end
    if descentTrack.IsPlaying then
        descentTrack:Stop()
    end
    if descentConnection then
        descentConnection:Disconnect()
        descentConnection = nil
    end
end

--// Boost WalkSpeed on landing
local function boostWalkSpeed()
    local originalSpeed = humanoid.WalkSpeed
    humanoid.WalkSpeed = 45

    task.delay(5, function()
        humanoid.WalkSpeed = originalSpeed
    end)
end

--// Start descent
local function startDescent()
    if descending or humanoid.FloorMaterial ~= Enum.Material.Air then return end

    descending = true
    purgePhysics()

    descentTrack:Play()
    descentTrack:AdjustSpeed(4)

    descentForce = Instance.new("BodyVelocity")
    descentForce.MaxForce = Vector3.new(0, 1e5, 0)
    descentForce.P = 10000
    descentForce.Velocity = Vector3.new(0, -2, 0)
    descentForce.Parent = rootPart

    descentConnection = RunService.RenderStepped:Connect(function()
        if not descending then return end

        if humanoid.FloorMaterial ~= Enum.Material.Air then
            cancelDescent()
            boostWalkSpeed()
            return
        end

        local descentSpeed = spaceHeld and -15 or -2
        if descentForce then
            descentForce.Velocity = Vector3.new(0, descentSpeed, 0)
        end
    end)
end

--// Input detection
UIS.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.Space then
        spaceHeld = true
    end

    if input.KeyCode == Enum.KeyCode.E then
        if humanoid.FloorMaterial == Enum.Material.Air then
            if descending then
                cancelDescent()
            else
                startDescent()
            end
        end
    end
end)

UIS.InputEnded:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.Space then
        spaceHeld = false
    end
end)
