local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")

local lp = Players.LocalPlayer
local cam = workspace.CurrentCamera

local inputConn -- will hold the input connection

local function stopAllAnimations(hum)
    for _, track in ipairs(hum:GetPlayingAnimationTracks()) do
        track:Stop(0)
    end
end

local function playDominantFrozenAnim(id)
    local char = lp.Character
    if not char then return end
    local hum = char:FindFirstChildOfClass("Humanoid")
    if not hum then return end

    stopAllAnimations(hum)

    local anim = Instance.new("Animation")
    anim.AnimationId = "rbxassetid://" .. id
    local track = hum:LoadAnimation(anim)
    track.Priority = Enum.AnimationPriority.Action4
    track:Play()
    track:AdjustSpeed(2)

    -- Freeze after 0.35s, then stop after 1.5s
    task.delay(0.35, function()
        if track.IsPlaying then
            track:AdjustSpeed(0)
        end
    end)

    task.delay(1.5, function()
        if track.IsPlaying then
            track:Stop()
        end
    end)
end

local function freezeAvatar(char)
    for _, part in ipairs(char:GetDescendants()) do
        if part:IsA("BasePart") then
            part.Anchored = true
        elseif part:IsA("Humanoid") then
            part.PlatformStand = true
        end
    end
end

local function unfreezeAvatar(char)
    for _, part in ipairs(char:GetDescendants()) do
        if part:IsA("BasePart") then
            part.Anchored = false
        elseif part:IsA("Humanoid") then
            part.PlatformStand = false
        end
    end
end

local function flashPossession()
    local char = lp.Character
    if not char then return end
    local hrp = char:FindFirstChild("HumanoidRootPart")
    local hum = char:FindFirstChildOfClass("Humanoid")
    if not hrp or not hum then return end

    local totalFlashes = 30
    local startTime = tick()

    for i = 1, totalFlashes do
        local elapsed = tick() - startTime
        local progress = math.clamp(elapsed / 10, 0, 1)
        local speedFactor = 1 + progress * 3

        local freezeDuration = math.max(0.7 / speedFactor, 0.1)
        local postDuration = math.max(0.3 / speedFactor, 0.1)

        freezeAvatar(char)
        playDominantFrozenAnim("81433890484822")

        local chosenDirection = Vector3.zero
        local captureConn = RunService.RenderStepped:Connect(function()
            chosenDirection = hum.MoveDirection
        end)

        task.delay(freezeDuration, function()
            captureConn:Disconnect()

            local direction = chosenDirection.Unit
            if direction.Magnitude ~= direction.Magnitude or direction.Magnitude == 0 then
                direction = hrp.CFrame.LookVector
            end

            local rayParams = RaycastParams.new()
            rayParams.FilterDescendantsInstances = {char}
            rayParams.FilterType = Enum.RaycastFilterType.Blacklist

            local maxDistance = 20
            local result = workspace:Raycast(hrp.Position, direction * maxDistance, rayParams)

            local finalOffset
            if result then
                finalOffset = direction * math.max(result.Distance - 2, 0)
            else
                finalOffset = direction * maxDistance
            end

            hrp.CFrame = hrp.CFrame + finalOffset
            unfreezeAvatar(char)
        end)

        task.wait(freezeDuration + postDuration)
    end
end

local function connectInput()
    if inputConn then inputConn:Disconnect() end
    inputConn = UIS.InputBegan:Connect(function(input, gp)
        if gp then return end
        if input.KeyCode == Enum.KeyCode.V then
            flashPossession()
        end
    end)
end

lp.CharacterAdded:Connect(function()
    if inputConn then inputConn:Disconnect() end
end)

if lp.Character then
    connectInput()
end
