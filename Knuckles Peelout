local UIS = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Camera = workspace.CurrentCamera

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local hrp = character:WaitForChild("HumanoidRootPart")

local anim1 = Instance.new("Animation")
anim1.AnimationId = "rbxassetid://105660804989893" -- hold anim start
local anim2 = Instance.new("Animation")
anim2.AnimationId = "rbxassetid://123691762461584" -- hold anim accel + dash anim

local animTrack1, animTrack2, runAnimTrack
local holding = false
local cooldown = false
local cooldownGui, cooldownLabel
local currentDir = Vector3.new(0, 0, -1)
local fourXTimeAccumulated = 0
local dashSpeed = 100
local runTime = 3
local decayStart = 2.5
local decayDuration = runTime - decayStart

local boundToRenderStep = false

local inputBeganConn, inputEndedConn

local function cleanupDash()
    if boundToRenderStep then
        RunService:UnbindFromRenderStep("ActualDash")
        boundToRenderStep = false
    end
    humanoid.AutoRotate = true
    humanoid.WalkSpeed = 25
    if runAnimTrack then
        runAnimTrack:Stop()
        runAnimTrack = nil
    end
end

local function cleanupAll()
    holding = false
    cooldown = false

    if animTrack1 then
        animTrack1:Stop()
        animTrack1 = nil
    end
    if animTrack2 then
        animTrack2:Stop()
        animTrack2 = nil
    end
    if runAnimTrack then
        runAnimTrack:Stop()
        runAnimTrack = nil
    end

    cleanupDash()

    if cooldownGui then
        cooldownGui:Destroy()
        cooldownGui = nil
        cooldownLabel = nil
    end

    if inputBeganConn then
        inputBeganConn:Disconnect()
        inputBeganConn = nil
    end
    if inputEndedConn then
        inputEndedConn:Disconnect()
        inputEndedConn = nil
    end
end

local function makeGui()
    if cooldownGui then return end
    cooldownGui = Instance.new("ScreenGui")
    cooldownGui.Name = "DashCooldownGui"
    cooldownGui.ResetOnSpawn = false
    cooldownGui.Parent = player:WaitForChild("PlayerGui")

    cooldownLabel = Instance.new("TextLabel", cooldownGui)
    cooldownLabel.Size = UDim2.new(0, 60, 0, 20)
    cooldownLabel.Position = UDim2.new(1, -70, 0.5, -110)
    cooldownLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    cooldownLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    cooldownLabel.Font = Enum.Font.Code
    cooldownLabel.TextSize = 14
    cooldownLabel.Text = "Ready"
end

local function startCooldown(duration)
    cooldown = true
    local start = tick()
    coroutine.wrap(function()
        while tick() - start < duration do
            if cooldownLabel then
                cooldownLabel.Text = string.format("%.1f", duration - (tick() - start))
            end
            RunService.Heartbeat:Wait()
        end
        cooldown = false
        if cooldownLabel then
            cooldownLabel.Text = "Ready"
        end
    end)()
end

local function bindInputs()
    inputBeganConn = UIS.InputBegan:Connect(function(input, gpe)
        if gpe or input.KeyCode ~= Enum.KeyCode.T or holding or cooldown then return end
        holding = true
        humanoid.AutoRotate = false
        humanoid.WalkSpeed = 0
        fourXTimeAccumulated = 0

        if not cooldownGui then
            makeGui()
        end

        animTrack1 = humanoid:LoadAnimation(anim1)
        animTrack1:Play()
        animTrack1:AdjustSpeed(1)

        local holdStart = tick()
        local tickConnection
        tickConnection = RunService.RenderStepped:Connect(function()
            if not holding then tickConnection:Disconnect() return end
            local t = tick() - holdStart

            if t <= 2.5 then
                animTrack1:AdjustSpeed(1 + t / 2.5)
            elseif not animTrack2 then
                animTrack1:Stop()
                animTrack1 = nil
                animTrack2 = humanoid:LoadAnimation(anim2)
                animTrack2:Play()
            elseif t > 2.5 and t <= 4 then
                animTrack2:AdjustSpeed(1 + (t - 2.5) / 1.5)
            elseif t > 3.5 then
                animTrack2:AdjustSpeed(3)
                fourXTimeAccumulated = t - 3.5
            end
        end)
    end)

    inputEndedConn = UIS.InputEnded:Connect(function(input)
        if input.KeyCode ~= Enum.KeyCode.T or not holding then return end
        holding = false

        if animTrack1 then animTrack1:Stop() animTrack1 = nil end
        if animTrack2 then animTrack2:Stop() animTrack2 = nil end

        local allowDash = fourXTimeAccumulated >= 1
        if not allowDash then
            startCooldown(10)
            humanoid.WalkSpeed = 16
            humanoid.AutoRotate = true
            return
        end

        startCooldown(25)
        humanoid.AutoRotate = false
        humanoid.WalkSpeed = dashSpeed

        runAnimTrack = humanoid:LoadAnimation(anim2)
        runAnimTrack:Play()
        runAnimTrack:AdjustSpeed(3)

        local dashStart = tick()
        boundToRenderStep = true
        RunService:BindToRenderStep("ActualDash", Enum.RenderPriority.Character.Value + 1, function()
            local elapsed = tick() - dashStart
            if elapsed > runTime then
                cleanupDash()
                return
            end

            if elapsed > decayStart then
                local pct = (elapsed - decayStart) / decayDuration
                runAnimTrack:AdjustSpeed(math.clamp(3 - (2 * pct), 1, 3))
            else
                runAnimTrack:AdjustSpeed(3)
            end

            local camCF = Camera.CFrame
            local forward = Vector3.new(camCF.LookVector.X, 0, camCF.LookVector.Z).Unit
            local right = Vector3.new(camCF.RightVector.X, 0, camCF.RightVector.Z).Unit

            local baseMoveVec = forward

            local steerVec = Vector3.zero
            if UIS:IsKeyDown(Enum.KeyCode.A) then steerVec -= right end
            if UIS:IsKeyDown(Enum.KeyCode.D) then steerVec += right end
            if UIS:IsKeyDown(Enum.KeyCode.W) then steerVec += forward * 0.3 end

            local targetDir = (baseMoveVec + steerVec).Unit

            currentDir = currentDir:Lerp(targetDir, 0.05)
            hrp.CFrame = CFrame.new(hrp.Position, hrp.Position + currentDir)

            humanoid.WalkSpeed = dashSpeed
        end)
    end)
end

-- Initial bind on first character
bindInputs()

player.CharacterAdded:Connect(function(char)
    -- Clean up previous character state
    cleanupAll()

    -- Update refs
    character = char
    humanoid = char:WaitForChild("Humanoid")
    hrp = char:WaitForChild("HumanoidRootPart")

    -- Rebind inputs for new character
    bindInputs()
end)
