local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UIS = game:GetService("UserInputService")

local player = Players.LocalPlayer
local camera = workspace.CurrentCamera

local active = false
local clone = nil
local path = {}
local pathConnection = nil

-- Create path marker part
local function createPathPoint(position)
	local part = Instance.new("Part")
	part.Anchored = true
	part.CanCollide = false
	part.Size = Vector3.new(1, 0.2, 1)
	part.Color = Color3.fromRGB(255, 255, 0)
	part.Material = Enum.Material.Neon
	part.CFrame = CFrame.new(position)
	part.Parent = workspace
	table.insert(path, part)
end

-- Clone the player's character and customize it
local function cloneCharacter()
	local char = player.Character
	if not char then return end

	local cloneModel = char:Clone()
	cloneModel.Name = "ControllableClone"

	for _, part in cloneModel:GetDescendants() do
		if part:IsA("BasePart") then
			part.Transparency = 0.5
			part.Color = Color3.fromRGB(255, 0, 0)
			part.Material = Enum.Material.ForceField
			part.Anchored = false
			part.CanCollide = true
		elseif part:IsA("Decal") then
			part:Destroy()
		elseif part:IsA("Script") or part:IsA("LocalScript") then
			part:Destroy()
		end
	end

	local root = cloneModel:FindFirstChild("HumanoidRootPart")
	if root then
		local originalRoot = char:FindFirstChild("HumanoidRootPart")
		if originalRoot then
			root.CFrame = originalRoot.CFrame - Vector3.new(0, 3, 0)
		end
	end

	cloneModel.Parent = workspace
	return cloneModel
end

-- Start controlling the clone
local function beginControl()
	active = true

	local char = player.Character or player.CharacterAdded:Wait()
	local hrp = char:WaitForChild("HumanoidRootPart")

	-- Anchor the player and float up
	hrp.Anchored = true
	hrp.CFrame += Vector3.new(0, 10, 0)

	-- Clone character and follow it
	clone = cloneCharacter()
	if not clone then return end

	local cloneHumanoid = clone:FindFirstChildOfClass("Humanoid")
	if cloneHumanoid then
		camera.CameraSubject = cloneHumanoid
	end

	-- Start path tracking
	local lastPos = clone:FindFirstChild("HumanoidRootPart").Position
	pathConnection = RunService.Heartbeat:Connect(function()
		local root = clone:FindFirstChild("HumanoidRootPart")
		if root and (root.Position - lastPos).Magnitude > 2 then
			createPathPoint(root.Position)
			lastPos = root.Position
		end
	end)
end

-- End control, remove clone, walk path
local function endControl()
	active = false

	if pathConnection then
		pathConnection:Disconnect()
	end

	if clone then
		clone:Destroy()
	end

	local char = player.Character or player.CharacterAdded:Wait()
	local hrp = char:WaitForChild("HumanoidRootPart")
	local humanoid = char:WaitForChild("Humanoid")

	hrp.Anchored = false
	camera.CameraSubject = humanoid

	-- Move along the path
	coroutine.wrap(function()
		for _, point in ipairs(path) do
			local dest = point.Position + Vector3.new(0, 1, 0)
			local dist = (hrp.Position - dest).Magnitude
			local tween = TweenService:Create(hrp, TweenInfo.new(dist / 16, Enum.EasingStyle.Linear), {
				CFrame = CFrame.new(dest)
			})
			tween:Play()
			tween.Completed:Wait()
		end

		for _, p in path do
			p:Destroy()
		end
		table.clear(path)
	end)()
end

-- Toggle with T key
UIS.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end
	if input.KeyCode == Enum.KeyCode.T then
		if not active then
			beginControl()
		else
			endControl()
		end
	end
end)
