local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local StarterGui = game:GetService("StarterGui")

local player = Players.LocalPlayer
local camera = workspace.CurrentCamera

local active = false
local dummy = nil
local path = {}
local pathConnection = nil

-- Path marker
local function createPathPoint(position)
	local part = Instance.new("Part")
	part.Anchored = true
	part.CanCollide = false
	part.Size = Vector3.new(1, 0.2, 1)
	part.Color = Color3.fromRGB(255, 255, 0)
	part.Material = Enum.Material.Neon
	part.CFrame = CFrame.new(position)
	part.Parent = workspace
	table.insert(path, part)
end

-- Spawns a fully working R6 dummy with your appearance
local function spawnPlayableDummy(position)
	local description = Players:GetHumanoidDescriptionFromUserId(player.UserId)

	local dummyModel = Players:CreateHumanoidModelFromDescription(description, Enum.HumanoidRigType.R6)
	dummyModel.Name = "PlayableDummy"

	-- Tint red and semi-transparent
	for _, part in dummyModel:GetDescendants() do
		if part:IsA("BasePart") then
			part.Color = Color3.fromRGB(255, 0, 0)
			part.Transparency = 0.5
		elseif part:IsA("Decal") or part:IsA("Accessory") then
			-- Optional: Make accessories transparent too
			if part:IsA("BasePart") then
				part.Transparency = 0.5
			end
		end
	end

	-- Spawn below player
	local hrp = dummyModel:FindFirstChild("HumanoidRootPart")
	if hrp then
		hrp.CFrame = CFrame.new(position)
	end

	dummyModel.Parent = workspace
	return dummyModel
end

-- Start dummy control
local function beginControl()
	active = true

	local char = player.Character or player.CharacterAdded:Wait()
	local hrp = char:WaitForChild("HumanoidRootPart")

	-- Float and anchor player
	hrp.Anchored = true
	hrp.CFrame += Vector3.new(0, 10, 0)

	-- Spawn dummy and set camera
	dummy = spawnPlayableDummy(hrp.Position - Vector3.new(0, 4, 0))
	local dummyHumanoid = dummy:FindFirstChildOfClass("Humanoid")
	if dummyHumanoid then
		camera.CameraSubject = dummyHumanoid
	end

	-- Track path
	local lastPos = dummy:FindFirstChild("HumanoidRootPart").Position
	pathConnection = RunService.Heartbeat:Connect(function()
		local root = dummy:FindFirstChild("HumanoidRootPart")
		if root and (root.Position - lastPos).Magnitude > 2 then
			createPathPoint(root.Position)
			lastPos = root.Position
		end
	end)
end

-- End dummy control
local function endControl()
	active = false

	if pathConnection then
		pathConnection:Disconnect()
	end

	if dummy then
		dummy:Destroy()
	end

	local char = player.Character or player.CharacterAdded:Wait()
	local hrp = char:WaitForChild("HumanoidRootPart")
	local humanoid = char:WaitForChild("Humanoid")

	hrp.Anchored = false
	camera.CameraSubject = humanoid

	-- Move along the path
	coroutine.wrap(function()
		for _, p in ipairs(path) do
			local goal = p.Position + Vector3.new(0, 1, 0)
			local dist = (hrp.Position - goal).Magnitude
			local tween = TweenService:Create(hrp, TweenInfo.new(dist / 16, Enum.EasingStyle.Linear), {
				CFrame = CFrame.new(goal)
			})
			tween:Play()
			tween.Completed:Wait()
		end

		for _, p in path do
			p:Destroy()
		end
		table.clear(path)
	end)()
end

-- Toggle on T
game:GetService("UserInputService").InputBegan:Connect(function(input, gp)
	if gp then return end
	if input.KeyCode == Enum.KeyCode.T then
		if not active then
			beginControl()
		else
			endControl()
		end
	end
end)
