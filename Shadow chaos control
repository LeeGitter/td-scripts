local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")

local player = Players.LocalPlayer
local camera = workspace.CurrentCamera

local active = false
local dummy = nil
local marker = nil
local pathConnection, moveConnection, flyConnection = nil, nil, nil
local floatBodyVelocity = nil

-- Utility: Enable or disable noclip for a model
local function setNoclip(model, state)
	for _, part in model:GetDescendants() do
		if part:IsA("BasePart") then
			part.CanCollide = not state
		end
	end
end

-- Utility: Create visual marker at a position
local function placeMarker(pos)
	if marker then marker:Destroy() end
	marker = Instance.new("Part")
	marker.Size = Vector3.new(3, 0.5, 3)
	marker.Anchored = true
	marker.CanCollide = false
	marker.Material = Enum.Material.Neon
	marker.Color = Color3.fromRGB(0, 255, 255)
	marker.CFrame = CFrame.new(pos)
	marker.Name = "FlyDestinationMarker"
	marker.Parent = workspace
end

-- Utility: Remove marker
local function removeMarker()
	if marker then
		marker:Destroy()
		marker = nil
	end
end

-- Spawns your R6 clone
local function spawnDummy(pos)
	local desc = Players:GetHumanoidDescriptionFromUserId(player.UserId)
	local model = Players:CreateHumanoidModelFromDescription(desc, Enum.HumanoidRigType.R6)
	model.Name = "ControllableClone"
	model.Parent = workspace

	for _, part in model:GetDescendants() do
		if part:IsA("BasePart") then
			part.Transparency = 0.5
			part.Material = Enum.Material.ForceField
			part.Color = Color3.fromRGB(255, 0, 0)
		end
	end

	local hrp = model:WaitForChild("HumanoidRootPart")
	hrp.CFrame = CFrame.new(pos)
	hrp.CanCollide = false

	local hum = model:FindFirstChildOfClass("Humanoid")
	if hum then hum.WalkSpeed = 50 end

	return model
end

-- Start clone control
local function beginControl()
	active = true

	local char = player.Character or player.CharacterAdded:Wait()
	local root = char:WaitForChild("HumanoidRootPart")

	-- Float real player up 4 studs
	root.Anchored = true
	root.CFrame += Vector3.new(0, 4, 0)

	-- Spawn dummy at your original position
	dummy = spawnDummy(root.Position - Vector3.new(0, 4, 0))
	camera.CameraSubject = dummy:FindFirstChildOfClass("Humanoid")

	-- Setup BodyVelocity for float/fly
	local hrp = dummy:WaitForChild("HumanoidRootPart")
	floatBodyVelocity = Instance.new("BodyVelocity")
	floatBodyVelocity.MaxForce = Vector3.new(1e5, 1e5, 1e5)
	floatBodyVelocity.Velocity = Vector3.zero
	floatBodyVelocity.Parent = hrp

	-- Handle space float and movement
	moveConnection = RunService.RenderStepped:Connect(function()
		local moveVec = Vector3.zero
		if UIS:IsKeyDown(Enum.KeyCode.W) then moveVec += Vector3.new(0, 0, -1) end
		if UIS:IsKeyDown(Enum.KeyCode.S) then moveVec += Vector3.new(0, 0, 1) end
		if UIS:IsKeyDown(Enum.KeyCode.A) then moveVec += Vector3.new(-1, 0, 0) end
		if UIS:IsKeyDown(Enum.KeyCode.D) then moveVec += Vector3.new(1, 0, 0) end

		local camCF = camera.CFrame
		local forward = Vector3.new(camCF.LookVector.X, 0, camCF.LookVector
